// =============================================================================
// REUSABLE MIXINS
// =============================================================================

@use './variables' as *;

// -----------------------------------------------------------------------------
// LAYOUT MIXINS
// -----------------------------------------------------------------------------

/// Creates a standardized control grid layout
/// @group layout  
/// @param {Length} $gap [$spacing-normal] - Grid gap
/// @param {List} $columns [$control-grid-columns] - Grid template columns
/// @example scss - Basic usage
///   .my-controls { @include control-grid; }
@mixin control-grid {
  display: grid;
  grid-template-columns: $control-grid-columns;
  gap: $spacing-normal;
  align-items: baseline;
  margin-bottom: 0.4rem;
  margin-inline-start: $spacing-tight; // Logical property for better i18n
}

// Flex patterns
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-gap($gap: $spacing-normal) {
  display: flex;
  gap: $gap;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-align {
  display: flex;
  align-items: center;
}

// -----------------------------------------------------------------------------
// COMPONENT MIXINS
// -----------------------------------------------------------------------------

// Control input styling (used 3x across components)
@mixin control-input {
  width: $number-input-width;
  padding: $spacing-micro $spacing-tight;
  font-size: $font-small;
  margin: 0;
  align-self: baseline;
  margin-top: $spacing-tight;
}

// Collapsible header icon styling (used 3x across components)
@mixin collapse-icon {
  font-size: $font-micro;
  transition: transform $transition-normal $easing-standard;
  display: inline-block;
  width: $collapse-icon-width;
  
  &.expanded {
    transform: rotate(90deg);
  }
}

// Control note styling (used 2x across components)
@mixin control-note {
  grid-column: 1 / -1;
  margin-top: -$spacing-tight;
  margin-bottom: $spacing-tight;
  margin-inline-start: $spacing-tight; // Logical property for better i18n
}

/// Advanced button reset for overriding framework styles
/// @group buttons
/// @param {Boolean} $include-hover [true] - Include hover state styling
/// @param {Boolean} $include-transition [true] - Include transition effects
/// @example scss - Basic reset
///   .custom-button { @include button-reset; }
/// @example scss - Reset without hover
///   .custom-button { @include button-reset($include-hover: false); }
@mixin button-reset($include-hover: true, $include-transition: true) {
  appearance: none;
  background: none;
  border: none;
  font: inherit;
  color: inherit;
  cursor: pointer;
  padding: 0;
  margin: 0;
  outline: none;
  
  @if $include-transition {
    transition: color $transition-normal $easing-standard;
  }
  
  @if $include-hover {
    &:hover {
      color: var(--pico-primary);
    }
  }
}

// Placeholder for shared range slider thumb styles
%slider-thumb {
  width: $thumb-size;
  height: $thumb-size;
  border-radius: $radius-round;
  background: var(--pico-primary);
  cursor: pointer;
  border: $border-normal solid var(--pico-background-color);
  box-shadow: 0 0 0 1px var(--pico-muted-border-color);
  transition: background-color $transition-normal $easing-standard;
}

%slider-thumb-hover {
  background: var(--pico-primary-hover);
}

// Logical properties mixins for better i18n support
@mixin logical-spacing($block-start: 0, $inline-end: 0, $block-end: 0, $inline-start: 0) {
  margin-block-start: $block-start;
  margin-inline-end: $inline-end;
  margin-block-end: $block-end;
  margin-inline-start: $inline-start;
}

// Accessibility mixins
@mixin high-contrast-support {
  @media (prefers-contrast: high) {
    border: 2px solid;
    background: Canvas;
    color: CanvasText;
  }
}

@mixin respect-motion-preferences {
  @media (prefers-reduced-motion: reduce) {
    animation-duration: 0.001ms !important;
    transition-duration: 0.001ms !important;
    scroll-behavior: auto !important;
  }
}

// Container query mixins for component-level responsiveness
@mixin container-query($size, $type: inline-size) {
  @container (min-#{$type}: #{$size}) {
    @content;
  }
}

/// Performance optimization mixin using CSS containment
/// @group performance
/// @param {String} $type [layout style paint] - Containment type
/// @param {Boolean} $gpu-accelerate [false] - Enable GPU acceleration
/// @example scss - Basic containment
///   .heavy-component { @include css-containment; }
@mixin css-containment($type: layout style paint, $gpu-accelerate: false) {
  contain: #{$type};
  
  @if $gpu-accelerate {
    transform: translateZ(0);
    will-change: transform, opacity;
  }
}

// Range control styling (used 4x)
@mixin range-control {
  @include flex-gap($spacing-normal);
  
  input[type="range"] {
    flex: 1;
    margin: 0;
    align-self: baseline;
    margin-top: $spacing-tight;
    height: $control-height;
    
    @include custom-range-slider;
  }
}

// Custom range slider appearance (used 4x) - optimized with placeholders
@mixin custom-range-slider {
  -webkit-appearance: none;
  appearance: none;
  height: $track-height;
  background: var(--pico-muted-border-color);
  border-radius: $radius-small;
  outline: none;
  
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    @extend %slider-thumb;
  }
  
  &::-moz-range-thumb {
    @extend %slider-thumb;
  }
  
  &:hover::-webkit-slider-thumb {
    @extend %slider-thumb-hover;
  }
  
  &:hover::-moz-range-thumb {
    @extend %slider-thumb-hover;
  }
}

// Collapsible header styling (used 4x)
@mixin collapsible-header {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  @include flex-gap($spacing-small);
  user-select: none;
  transition: color $transition-normal $easing-standard;
  width: 100%;
  text-align: left;
  font-size: $font-normal;
  font-weight: $weight-semibold;
  
  &:hover {
    color: var(--pico-primary);
  }
}


// Status bar styling (used 2x)
@mixin status-bar {
  @include flex-between;
  padding: 0.5rem 0.75rem;
  background: var(--pico-muted-background-color);
  border-top: $border-thin solid var(--pico-muted-border-color);
  font-size: $font-small;
  color: var(--pico-muted-color);
}

// Placeholder content (used 4x)
@mixin placeholder-content {
  @include flex-center;
  @include flex-column;
  text-align: center;
  color: var(--pico-muted-color);
  padding: $spacing-xxl;
  gap: $spacing-normal;
}

// Progress bar styling (used 2x)
@mixin progress-bar {
  width: 100%;
  height: 0.5rem;
  background: var(--pico-muted-background-color);
  border-radius: $radius-normal;
  overflow: hidden;
  
  .progress-fill {
    height: 100%;
    background: var(--pico-primary);
    border-radius: inherit;
    transition: width $transition-normal $easing-standard;
  }
}

// -----------------------------------------------------------------------------
// UTILITY MIXINS
// -----------------------------------------------------------------------------

// Truncate text with ellipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Hide visually but keep for screen readers
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Focus outline for accessibility
@mixin focus-outline {
  outline: $border-normal solid var(--pico-primary);
  outline-offset: $border-normal;
}

// Box shadow variations
@mixin shadow-sm {
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

@mixin shadow-md {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

@mixin shadow-lg {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

// -----------------------------------------------------------------------------
// RESPONSIVE MIXINS
// -----------------------------------------------------------------------------

@mixin mobile-only {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}