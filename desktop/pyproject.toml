[tool.poetry]
name = "coin-maker-desktop"
version = "0.1.0"
description = "Desktop application for 3D Coin Maker - Coordinates backend and frontend for standalone desktop use"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
# Backend as local dependency (inherits all backend dependencies)
coin-maker-backend = {path = "../backend", develop = true}
# Desktop-specific GUI dependencies
pywebview = {version = "^5.4", extras = ["qt"]}
PyQt6 = {version = "^6.7.0", markers = "sys_platform == 'linux'"}
PyQt6-WebEngine = {version = "^6.7.0", markers = "sys_platform == 'linux'"}
pyinstaller = "^6.15.0"

[tool.poetry.group.dev.dependencies]
pyright = "^1.1.300"
ruff = "^0.1.0"
pytest = "^7.4.0"
requests = "^2.31.0"
httpx = "^0.28.1"
pyinstaller = "^6.15.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 100
cache-dir = "../build/.ruff_cache"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pyright]
include = [".", "services"]
exclude = ["**/__pycache__"]
defineConstant = { DEBUG = true }
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.11"
pythonPlatform = "Linux"
# Backend should be available via path dependency
extraPaths = ["../backend"]

[tool.pytest.ini_options]
cache_dir = "../build/.pytest_cache"
addopts = "-v --tb=short"
testpaths = ["tests"]