# Base docker-compose configuration
# Common settings shared between dev and production

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT:-development}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USE_CELERY: ${USE_CELERY:-true}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    env_file:
      - config/backend.base.env
      - config/backend.${ENVIRONMENT:-development}.env
    restart: ${RESTART_POLICY:-no}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT:-development}
    env_file:
      - config/frontend.base.env
      - config/frontend.${ENVIRONMENT:-development}.env
    restart: ${RESTART_POLICY:-no}

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: ${RESTART_POLICY:-no}
    profiles:
      - celery

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT:-development}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USE_CELERY: ${USE_CELERY:-true}
    env_file:
      - config/backend.base.env
      - config/backend.${ENVIRONMENT:-development}.env
    depends_on:
      - redis
      - backend
    restart: ${RESTART_POLICY:-no}
    profiles:
      - celery

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT:-development}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USE_CELERY: ${USE_CELERY:-true}
    env_file:
      - config/backend.base.env
      - config/backend.${ENVIRONMENT:-development}.env
    depends_on:
      - redis
      - backend
    restart: ${RESTART_POLICY:-no}
    profiles:
      - celery

volumes:
  redis_data:
    driver: local