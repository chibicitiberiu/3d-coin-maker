# Production configuration - use with: docker compose -f docker-compose.yml -f docker-compose.prod.yml
# This file extends the base docker-compose.yml with production-specific settings

services:
  backend:
    build:
      args:
        ENVIRONMENT: production
    volumes:
      - temp_data:/app/temp
      - db_data:/app/data
      - static_data:/app/static
      - log_data:/app/logs
    env_file:
      - config/backend.base.env
      - config/backend.production.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      args:
        ENVIRONMENT: production
    ports:
      - "3000:80"
    env_file:
      - config/frontend.base.env
      - config/frontend.production.env
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    env_file:
      - config/backend.base.env
      - config/backend.production.env
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --save 60 1000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  celery:
    volumes:
      - temp_data:/app/temp
      - db_data:/app/data
      - log_data:/app/logs
    env_file:
      - config/backend.base.env
      - config/backend.production.env
    command: celery -A workers.celery_app worker --loglevel=info --concurrency=2 --max-tasks-per-child=1000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "workers.celery_app", "inspect", "ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery-beat:
    volumes:
      - temp_data:/app/temp
      - db_data:/app/data
      - log_data:/app/logs
    env_file:
      - config/backend.base.env
      - config/backend.production.env
    command: celery -A workers.celery_app beat --loglevel=info --schedule=/app/data/celerybeat-schedule
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Production monitoring (optional)
  # nginx-prometheus-exporter:
  #   image: nginx/nginx-prometheus-exporter:latest
  #   ports:
  #     - "9113:9113"
  #   command:
  #     - -nginx.scrape-uri=http://frontend:80/nginx_status
  #   depends_on:
  #     - frontend
  #   restart: unless-stopped

volumes:
  redis_data:
    driver: local
  temp_data:
    driver: local
  db_data:
    driver: local
  static_data:
    driver: local
  log_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16